package forms.Profesional;

import datos.Profesionales;
import entidades.Profesional;
import static java.awt.image.ImageObserver.HEIGHT;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import miselaneos.Fecha;
import miselaneos.FrmIntern;
import miselaneos.GUI;
import miselaneos.Iconos;
import miselaneos.Imagenes;

/**
 *
 * @author cesar
 */
public class FrmLoginProfesional extends FrmIntern {

    public static int id = 11;
    public static Iconos iconos = new Iconos();//Declaro public y static para poder acceder luego desde cualquier lugar del proyecto en cualquier objeto
    public static Imagenes imgs = new Imagenes(); //Misma situacion que Iconos
    public static Fecha fe = new Fecha(); //Misma situacion que Iconos
    private GUI gui;
    /**
     * Creates new form FrmInicioSesion
     */
    public FrmLoginProfesional() {
        initComponents();
        gui = new GUI();
    }
    
    //pasamos como parametro el id del profesional para redirigirlo a FrmProfesional
    private void _loadProfesional(int idprof) {
        gui.loadProfesional(FrmProfesional.id, true, idprof);
    }
    
/**
 * Método para validar el usuario y contraseña ingresados por el usuario.
 * Se ejecuta en un hilo separado para no bloquear la interfaz gráfica del usuario.
 * Si las credenciales son correctas, se carga la información del profesional y se oculta la ventana actual.
 * Si las credenciales son incorrectas, se muestra un mensaje de error.
 */
    private void validarUsuario() {
        Thread t = new Thread(new Runnable() {
            @Override
            public void run() {
                ArrayList<Profesional> profList = new ArrayList<Profesional>();
                Profesionales cnx = new Profesionales();

                // Verifica si la conexión a la base de datos es correcta
                if (cnx.isOkConexion()) {
                    // Obtiene la lista de profesionales desde la base de datos
                    profList = cnx.list("SELECT * FROM " + cnx.getTabla());
                    cnx.isCloseConexion(); // Cierra la conexión
                }

                String usuarioLogin = txtUsuario.getText(); // Obtiene el nombre de usuario ingresado
                String claveLogin = txtClave.getText(); // Obtiene la contraseña ingresada
                String usuarioBD = ""; // Variable para almacenar el nombre de usuario desde la base de datos
                String claveBD = ""; // Variable para almacenar la contraseña desde la base de datos
                int idProfesional; // Variable para almacenar el ID del profesional
                boolean login = false; // Bandera para determinar si el inicio de sesión es exitoso

                // Recorre la lista de profesionales
                for (Profesional prof : profList) {
                    usuarioBD = prof.getUsuario(); // Obtiene el nombre de usuario del profesional
                    claveBD = prof.getClave(); // Obtiene la contraseña del profesional
                    idProfesional = prof.getId(); // Obtiene el ID del profesional

                    // Verifica si las credenciales ingresadas coinciden con las de la base de datos
                    if (usuarioLogin.equals(usuarioBD) && claveLogin.equals(claveBD)) {
                        _loadProfesional(idProfesional); // Carga la información del profesional
                        setVisible(false); // Oculta la ventana actual
                        login = true; // Indica que el inicio de sesión fue exitoso
                        break; // Sale del bucle
                    }
                }

                // Si el inicio de sesión no fue exitoso, muestra un mensaje de error
                if (!login) {
                    JOptionPane.showMessageDialog(null, "Usuario o Clave incorrectos", "Acceso Denegado", HEIGHT);
                }
            }
        });

        t.start(); // Inicia el hilo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtClave = new javax.swing.JPasswordField();
        txtUsuario = new javax.swing.JTextField();
        lblCheck1 = new etiquetas.LblCheck();
        lblCheck2 = new etiquetas.LblCheck();
        BtnIngresar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMaximizable(false);
        setResizable(false);
        setTitle("Profesional");

        lblCheck1.setText("Usuario");

        lblCheck2.setText("Clave");

        BtnIngresar.setText("Ingresar");
        BtnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnIngresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCheck1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCheck2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnIngresar))
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCheck1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCheck2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BtnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnIngresarActionPerformed
        validarUsuario();
    }//GEN-LAST:event_BtnIngresarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnIngresar;
    private etiquetas.LblCheck lblCheck1;
    private etiquetas.LblCheck lblCheck2;
    private javax.swing.JPasswordField txtClave;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
